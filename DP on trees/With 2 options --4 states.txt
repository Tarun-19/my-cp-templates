// Problem: C. Parsa's Humongous Tree
// Contest: Codeforces - Codeforces Round #722 (Div. 2)
// URL: https://codeforces.com/contest/1529/problem/C
// Memory Limit: 256 MB
// Time Limit: 1000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;

vpll range(100101);

ll dp[2][100101];

bitset<100101> vis;
vll adj[100101];

void dfs(ll n)
{
	vis[n]=1;
	
	for(auto it:adj[n])
	{
		if(vis[it]) continue;
		
		dfs(it);
		
		dp[0][n]+=max(abs(range[n].ff-range[it].ff) +dp[0][it] , abs(range[n].ff-range[it].ss) +dp[1][it]);
		dp[1][n]+=max(abs(range[n].ss-range[it].ff) +dp[0][it] , abs(range[n].ss-range[it].ss) +dp[1][it]);
	}
}



int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        
        f0(i,n+10)
        {
        	dp[0][i]=dp[1][i]=0;
        	vis[i]=0;
        	adj[i].clear();
        }
        
        f0(i,n)
        {
        	cin>>l>>r;
        	range[i+1]={l,r};
        }
        
        f0(i,n-1)
        {
        	cin>>l>>r;
        	adj[l].pb(r);
        	adj[r].pb(l);
        }
        
        
        dfs(1);
        
        
        ans=max(dp[0][1],dp[1][1]);
        
        
        
        cout<<ans<<ln;
    }
	return 0;
}
// Either be on top or leave this crap..(╥﹏╥)
