// Problem: C. Mocha and Hiking
// Contest: Codeforces - Codeforces Round #738 (Div. 2)
// URL: https://codeforces.com/contest/1559/problem/C
// Memory Limit: 256 MB
// Time Limit: 1000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;

vll adj[10005];
ll vis[10005];

vll topo1,topo2;

void toposort1(ll n)
{
	
	vis[n]=1;
	
	for(auto it:adj[n])
	{
		if(vis[it])
		continue;
		toposort1(it);
	}
	
	topo1.pb(n);
}


void toposort2(ll n)
{
	
	vis[n]=1;
	
	for(auto it:adj[n])
	{
		if(vis[it])
		continue;
		toposort2(it);
	}
	
	topo2.pb(n);
}



int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        
        // toposort order starting from 1 or n+1 node should be a valid answer
        // else -1
        
        f0(i,n+2)
        {
        	vis[i]=0;
        	adj[i].clear();
        }
        
        f1(i,n-1)
        {
        	adj[i].pb(i+1);
        }
        
        f1(i,n)
        {
        	cin>>x;
        	if(!x)
        	{
        		adj[i].pb(n+1);
        	}
        	else
        	{
        		adj[n+1].pb(i);
        	}
        }
        
        topo1.clear();
        topo2.clear();
        
        toposort1(1);
        reverse(all(topo1));
        
        f0(i,n+2)
        {
        	vis[i]=0;
        }
        
        toposort2(n+1);
        reverse(all(topo2));
        
        // CYCLE DETECTION IS WRONG!!!! 2->3 3->2
	
        if(topo1.size()==n+1)
        {
        	display(topo1);
        }
        else if(topo2.size()==n+1)
        {
        	display(topo2);
        }
        else
        {
        	cout<<-1<<ln;
        }
        
        // cout<<ans<<ln;
    }
	return 0;
}
// It's gonna be legendary!!
// Wait for it ~Barney
