/*  Author: Tarun Kumar
    E-mail: tarunkumar281200@gmail.com

    " A code is like love,
        it has created with clear intentions at the beginning,
            but it can get complicated:) "
*/
#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}

ll sub[1000100];//subtree size of each node
ll vis[1000100];
vll adj[1000100];

void reset()
{
    ll i;
    f0(i,1000100)
    {
        vis[i]=sub[i]=0;
        adj[i].clear();
    }
}

void dfs(ll n)
{
    sub[n]=1;
    vis[n]=1;
    for(auto it:adj[n])
    {
        if(!vis[it])
        {
            dfs(it);
            sub[n]+=sub[it];
        }
    }
    
}

int main()
{FAST;ll t,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    t=1;
    // cin>>t;
    while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        reset();
        cin>>n;
        
        f0(i,n-1)
        {
            cin>>x>>y;
            adj[x].pb(y);
            adj[y].pb(x);
        }
        
        dfs(1);//no need of passing parent bcz it is a tree:)
        
        
        display(sub);
        
        
        // cout<<ans<<ln;
    }
	return 0;
}
