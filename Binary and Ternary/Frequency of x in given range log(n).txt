// Problem: D. Cut and Stick
// Contest: Codeforces - Codeforces Round #716 (Div. 2)
// URL: https://codeforces.com/contest/1514/problem/D
// Memory Limit: 512 MB
// Time Limit: 3000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define bs binary_search
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;
ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}

mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());// 64bit

vll adj[1000000+8];

ll query(ll l,ll r,ll x)
{
	l=lower_bound(all(adj[x]),l)-adj[x].begin();
	r=lower_bound(all(adj[x]),r+1)-adj[x].begin();
	
	return r-l;
}

int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n>>q;
        ll a[n+1];
        f0(i,n)
        {
            cin>>tmp;
            a[i+1]=tmp;
            adj[tmp].pb(i+1);
        }
        
        while(q--)
        {
        	cin>>l>>r;
        	
        	mx=0;
        	f0(i,50)
        	{
        		pos=rng()%(r-l+1)+l;
        		// cout<<pos<<endl;
        		mx=max(mx,query(l,r,a[pos]));
        	}
        	
        	ans=max(1LL,mx-((r-l+1)-mx));
        	cout<<ans<<ln;
        }
        
    }
	return 0;
}
// Either be on top or leave this crap..