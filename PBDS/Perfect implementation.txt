// Problem: Order statistic set
// Contest: SPOJ - Classical
// URL: https://www.spoj.com/problems/ORDERSET/
// Memory Limit: 1536 MB
// Time Limit: 2000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>
using namespace __gnu_pbds;
// order_of_key() -> no. of elements strictly smaller than k
// find_by_order()-> k-th element in current set (0-indexed) (sorted)
// less_equal -> multiset
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;


int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>q;
        ll a[n];
        
        ordered_set st;
        
        while(q--)
        {
        	cin>>ch>>n;
        	
        	if(ch=='I')
        	{
        		st.insert(n);
        	}
        	else if(ch=='D')
        	{
        		st.erase(n);
        	}
        	else if(ch=='K')
        	{
        		ans=0;
        		
        		n--;
        		
        		if(st.find_by_order(n)!=st.end())
        		{
        			cout<<*st.find_by_order(n)<<ln;
        		}
        		else
        		{
        			cout<<"invalid"<<ln;
        		}
        		
        	}
        	else
        	{
        		ans=st.order_of_key(n);
        		cout<<ans<<ln;
        	}
        }
        
    }
	return 0;
}
// Bacha, kabil bano kabil
// Kaamyabi jhak maarke peeche ayegi ~Phunsukh Wangdu