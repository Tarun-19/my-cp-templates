import java.util.*;
import java.math.BigInteger;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		int t;
		t=sc.nextInt();
		while((t--)>0)
		{
		   String s1,s2;
		    s1=sc.next();
		    s2=sc.next();
		    BigInteger f1=new BigInteger(s1);
		    BigInteger f2=new BigInteger(s2);
		    BigInteger p=f1.multiply(f2);             //Biginteger x=f2; (for storing string in integer)
		    System.out.println(p);
		}
	}
}










import java.util.*;

import java.math.BigInteger;

class GFG {

	public static void main (String[] args) {

		Scanner sc=new Scanner(System.in);

		int t,n;

		t=sc.nextInt();

		while((t--)>0)

		{

		    n=sc.nextInt();

		    BigInteger f1=new BigInteger("1");

		    while(n>=2)

		    f1=f1.multiply(BigInteger.valueOf(n--));

		    System.out.println(f1);

		}

	}

}




import java.util.*;
import java.math.BigInteger;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		int t=1;
		String s;
		while(t==1)
		{
		    s=sc.next();
		    if(s.equals("-1"))
		    break;
		    
		    BigInteger f1=new BigInteger(s);
		    BigInteger n=f1;
		    BigInteger i=BigInteger.valueOf(0);
		    BigInteger x=BigInteger.valueOf(9);
		    
		    while(((i.multiply(x)).compareTo(f1)==-1))
		    {
		        i=i.add(BigInteger.valueOf(1));
		    }
		    System.out.println(i);
		    
		}
	}
}



