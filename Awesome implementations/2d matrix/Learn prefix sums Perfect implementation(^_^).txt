// Problem: C. Star sky
// Contest: Codeforces - Codeforces Round #427 (Div. 2)
// URL: https://codeforces.com/problemset/problem/835/C
// Memory Limit: 256 MB
// Time Limit: 2000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

// “Time has a wonderful way of showing us what really matters” – Margaret Peters.
#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define bs binary_search
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;
ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}


int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n>>q>>c;
        
        // obs: c is soooo small
        
        ll dp[10+2][100+2][100+2];
        memo(dp,0);
        
        f0(i,n)
        {
        	cin>>x>>y>>tmp;
        	dp[tmp][x][y]=1;
        }
        
        
        f0(k,10+1)
        {
        	fab(i,1,100)
        	{
        		fab(j,1,100)
        		{
        			dp[k][i][j]=dp[k][i][j]+dp[k][i-1][j]+dp[k][i][j-1]-dp[k][i-1][j-1];
        			// All rhs states are already computed:)
        			// same as 2d prefix array, but for each element.
        		}
        	}
        }
        
        
        while(q--)
        {
        	ll x1,x2,y1,y2;
        	cin>>t>>x1>>y1>>x2>>y2;
        	
        	ans=0;
        	
        	f0(k,10+1)
        	{
        		pos=(k+t)%(c+1);
        		
        		p=dp[k][x2][y2];
        		p-=dp[k][x1-1][y2];
        		p-=dp[k][x2][y1-1];
        		p+=dp[k][x1-1][y1-1];
        		
        		
        		ans+=p*pos;
        	}
        	
        	cout<<ans<<ln;
        }
        
        
    }
	return 0;
}
// Boyhood to manhood is a rough transition-
// make yourself worthy or you are nothing:)