/*  Author: Tarun Kumar
    E-mail: tarunkumar281200@gmail.com

    Don't stop until you feel proud.(P.S. don't feel proud;)
*/#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;
const ll N=100010;//10^5

pair<ll,ll>st[4*N];// {odd,even}
ll a[N];


void build(ll si,ll ss,ll se) //segment index,start,end
{
	if(ss==se)
	{
		if(a[ss]%2==1)
		st[si]={1,0};
		else
		st[si]={0,1};
		return;
	}
	
	ll md=(ss+se)/2;
	build(2*si,ss,md);
	build(2*si+1,md+1,se);
	
	st[si].ff=st[2*si].ff+st[2*si+1].ff;
	st[si].ss=st[2*si].ss+st[2*si+1].ss;
}

void update(ll si,ll ss,ll se,ll pos,ll newval)
{
	if(ss==se)
	{
		if(newval&1) st[si]={1,0};
		else st[si]={0,1};
		
		a[pos]=newval;
		return;
	}
	
	ll md=(ss+se)/2;
	if(pos<=md) update(2*si,ss,md,pos,newval);
	else update(2*si+1,md+1,se,pos,newval);
	
	st[si].ff=st[2*si].ff+st[2*si+1].ff;
	st[si].ss=st[2*si].ss+st[2*si+1].ss;
}


ll query_get_even(ll si,ll ss,ll se,ll qs,ll qe)
{
	if(se<qs||ss>qe) return 0;
	if(ss>=qs&&se<=qe) return st[si].ss;
	
	ll md=(ss+se)/2;
	
	ll l=query_get_even(2*si,ss,md,qs,qe);
	ll r=query_get_even(2*si+1,md+1,se,qs,qe);
	
	return l+r;
}


ll query_get_odd(ll si,ll ss,ll se,ll qs,ll qe)
{
	if(se<qs||ss>qe) return 0;
	if(ss>=qs&&se<=qe) return st[si].ff;
	
	ll md=(ss+se)/2;
	
	ll l=query_get_odd(2*si,ss,md,qs,qe);
	ll r=query_get_odd(2*si+1,md+1,se,qs,qe);
	
	return l+r;
}

int main()
{FAST;ll t,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    t=1;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        f1(i,n)
        {
            cin>>tmp;
            a[i]=tmp;
        }
        
        
        build(1,1,n);// memset
        
        cin>>q;
        while(q--)
        {
        	cin>>z;
        	if(z==0)
        	{
        		cin>>pos>>x;
        		if((a[pos]&1)==(x&1)) continue;
        		update(1,1,n,pos,x);
        	}
        	else if(z==1)
        	{
        		cin>>l>>r;
        		ans=query_get_even(1,1,n,l,r);
        		cout<<ans<<ln;
        	}
        	else
        	{
        		cin>>l>>r;
        		ans=query_get_odd(1,1,n,l,r);
        		cout<<ans<<ln;
        	}
        }
        
    }
	return 0;
}
