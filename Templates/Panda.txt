/*  Author: Tarun Kumar
    E-mail: tarunkumar281200@gmail.com
=========="Impossible only means that you haven't found the solution yet"=======
*/#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define ll long long int
#define ull unsigned long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define mp make_pair
#define ff first
#define ss second
#define bs binary_search
#define lb lower_bound
#define ub upper_bound
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define lcm(x,y) boost::math::lcm(x,y)
#define display(x) for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";
#define hi cout<<"hi\n"
#define yes cout<<"Yes\n"
#define no cout<<"No\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;
const ll MAX=INT_MAX;const ll MIN=INT_MIN;
ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}
ll power(ll x,ll y)//0^0=1
{ll res=1;x=x%mod;if(x==0)return 0;while(y>0){if(y&1)res=(res*x)%mod;y=y>>1;x=(x*x)%mod;}return res;}
ll inverse(ll n)
{return power(n,mod-2);}
ll nCkmod(ll n,ll k)
{ll i,r=1;if(n<k)return 0;for(i=n;i>n-k;i--)r=(r*i)%mod;for(i=1;i<=k;i++)r=(r*inverse(i))%mod;return r;}
ll nCk(ll n,ll k)//TLE
{ll C[k+1]={0};C[0]=1;for(ll i=1;i<=n;i++)for(ll j=min(i,k);j>0;j--)C[j]=C[j]+C[j-1];return C[k];}
bool isPrime(int n)
{if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}

ll ans,n,m,a[1000000];
ll cats[1000000];
vll adj[1000000];
bool vis[1000000];

void reset()
{
    ll i;
    f0(i,1000000)
    {
        adj[i].clear();
        vis[i]=false;
        cats[i]=0;
    }
}


void dfs(ll node,ll cnt)
{
    vis[node]=true;
    cnt+=a[node];
    if(!a[node]) cnt=0;
    
    if(cnt>m) return;
    // cats[node]=cnt;
    if(node!=1&&adj[node].size()<=1)
    ans++;
    ll i;
    // f1(i,n)
    // cout<<cats[i]<<" ";cout<<ln;
    
    for(auto it:adj[node])
    {
        if(vis[it])
        continue;
        dfs(it,cnt);
    }
}


int main()
{
    FAST;
    ll t,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,tmp,it,pos,avg,cnt;
    string s;
    char ch;
    vll v;
    vpll vec;
    unordered_map<ll,ll> mappu;
    pair<ll,ll> pr;
    t=1;
    // cin>>t;
    while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n>>m;
        reset();
        f1(i,n)
        {
            cin>>tmp;
            a[i]=tmp;
        }
        p=n-1;
        
        while(p--)
        {
            cin>>x>>y;
            adj[x].pb(y);
            adj[y].pb(x);
        }
        
        dfs(1,0);
        
        // hi;
        // f1(i,n)
        // cout<<cats[i]<<" ";cout<<ln;
        
        // fab(i,2,n)
        // if(cats[i]<=m) ans++;
        
        
        cout<<ans<<ln;
    }
	return 0;
}

//////_________Mr. Panda_________/////
/*
                              _,add8ba,
                            ,d888888888b,
                           d8888888888888b                        _,ad8ba,_
                          d888888888888888)                     ,d888888888b,
                          I8888888888888888 _________          ,8888888888888b
                __________`Y88888888888888P"""""""""""baaa,__ ,888888888888888,
            ,adP"""""""""""9888888888P""^                 ^""Y8888888888888888I
         ,a8"^           ,d888P"888P^                           ^"Y8888888888P'
       ,a8^            ,d8888'                                     ^Y8888888P'
      a88'           ,d8888P'                                        I88P"^
    ,d88'           d88888P'                                          "b,
   ,d88'           d888888'                                            `b,
  ,d88'           d888888I                                              `b,
  d88I           ,8888888'            ___                                `b,
 ,888'           d8888888          ,d88888b,              ____            `b,
 d888           ,8888888I         d88888888b,           ,d8888b,           `b
,8888           I8888888I        d8888888888I          ,88888888b           8,
I8888           88888888b       d88888888888'          8888888888b          8I
d8886           888888888       Y888888888P'           Y8888888888,        ,8b
88888b          I88888888b      `Y8888888^             `Y888888888I        d88,
Y88888b         `888888888b,      `""""^                `Y8888888P'       d888I
`888888b         88888888888b,                           `Y8888P^        d88888
 Y888888b       ,8888888888888ba,_          _______        `""^        ,d888888
 I8888888b,    ,888888888888888888ba,_     d88888888b               ,ad8888888I
 `888888888b,  I8888888888888888888888b,    ^"Y888P"^      ____.,ad88888888888I
  88888888888b,`888888888888888888888888b,     ""      ad888888888888888888888'
  8888888888888698888888888888888888888888b_,ad88ba,_,d88888888888888888888888
  88888888888888888888888888888888888888888b,`"""^ d8888888888888888888888888I
  8888888888888888888888888888888888888888888baaad888888888888888888888888888'
  Y8888888888888888888888888888888888888888888888888888888888888888888888888P
  I888888888888888888888888888888888888888888888P^  ^Y8888888888888888888888'
  `Y88888888888888888P88888888888888888888888888'     ^88888888888888888888I
   `Y8888888888888888 `8888888888888888888888888       8888888888888888888P'
    `Y888888888888888  `888888888888888888888888,     ,888888888888888888P'
     `Y88888888888888b  `88888888888888888888888I     I888888888888888888'
       "Y8888888888888b  `8888888888888888888888I     I88888888888888888'
         "Y88888888888P   `888888888888888888888b     d8888888888888888'
            ^""""""""^     `Y88888888888888888888,    888888888888888P'
                             "8888888888888888888b,   Y888888888888P^
                              `Y888888888888888888b   `Y8888888P"^
                                "Y8888888888888888P     `""""^
                                  `"YY88888888888P'
                                       ^""""""""'
*/
 