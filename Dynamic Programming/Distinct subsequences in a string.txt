// Problem: Distinct Subsequences
// Contest: SPOJ - Classical
// URL: https://www.spoj.com/problems/DSUBSEQ/
// Memory Limit: 1536 MB
// Time Limit: 1000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;

ll distinct_subsequences(string s)// O(n)
{
	ll i,j,k,n;
	
	n=s.size();
	
	ll dp[n+1];// distinct subsequences upto prefix i-1
	
	dp[0]=1;
	
	ll recent[130]={0};
	memo(recent,-1);
	
	f1(i,n)
	{
		dp[i]=dp[i-1]*2;
		dp[i]%=mod;/// check this
		
		if(recent[s[i-1]]!=-1)
		{
			dp[i]-=dp[recent[s[i-1]]-1];
			dp[i]%=mod;
		}
		
		recent[s[i-1]]=i;// one based:)
		
	}
	// display(dp);
	
	dp[n]+=mod+mod;
	dp[n]%=mod;
	
	return dp[n];
}

int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>s;
        
        ans=distinct_subsequences(s);
        
        cout<<ans<<ln;
    }
	return 0;
}
// It's gonna be legendary!!
// Wait for it ~Barney
