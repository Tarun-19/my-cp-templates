// Problem: A. Functions again
// Contest: Codeforces - Codeforces Round #407 (Div. 1)
// URL: https://codeforces.com/problemset/problem/788/A
// Memory Limit: 256 MB
// Time Limit: 1000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define bs binary_search
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;
ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}

ll kadane(ll a[],ll n)
{
	ll cur=a[0];
	ll ans=a[0];
	
	ll i;
	f1(i,n-1)
	{
		cur=max(cur+a[i],a[i]);
		ans=max(ans,cur);
	}
	return ans;
}

// https://leetcode.com/problems/maximum-subarray/description/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {// this is how 'Kadane' was formed

        // set<int> st;
        int st=0;
        // st.insert(0);
        
        int sum=0;
        int ans=nums[0];
        for(auto it:nums)
        {
            sum+=it;
            // int x=*st.begin();
            int x=st;
            ans=max(ans,sum-x);
            
            // st.insert(sum);
            st=min(st,sum);
        }
        // ans=max(ans,sum);
        
        return ans;
    }
};


int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        ll a[n];
        f0(i,n)
        {
            cin>>tmp;
            a[i]=tmp;
            // mappu[tmp]++;
        }
        
        ll b[n-1],c[n-1];
        
        f0(i,n-1)
        {
        	b[i]=abs(a[i]-a[i+1]);
        	c[i]=b[i];
        	
        	if(i&1) b[i]*=-1;
        	else c[i]*=-1;
        }
        
        ans=max(kadane(b,n-1),kadane(c,n-1));
        
        cout<<ans<<ln;
    }
	return 0;
}
// Either be on top or leave this crap..(╥﹏╥)
