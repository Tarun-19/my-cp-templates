// Problem: D. Maximum Sum of Products
// Contest: Codeforces - Educational Codeforces Round 108 (Rated for Div. 2)
// URL: https://codeforces.com/contest/1519/problem/D
// Memory Limit: 256 MB
// Time Limit: 2000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define bs binary_search
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;
ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};
bool sortbysec(pair<ll,ll> a,pair<ll,ll> b)//(i+1,i)
{return (a.second<b.second);}

ll n;
ll a[5005],b[5005];
ll dp[5005][5005],prf[5005];


ll recursion(ll l,ll r)
{
	if(l<1 or r>n) return 0;
	if(l>r) return 0;
	
	if(dp[l][r]!=-1) return dp[l][r];
	
	if(l==r) return a[l]*b[r];
	
	// dp[l][r] is -1.....reset it
	
	dp[l][r]=a[l]*b[r]+a[r]*b[l]+recursion(l+1,r-1);
	return dp[l][r];
}

int main()
{FAST;ll t=1,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        
        f1(i,n) cin>>a[i];
        f1(i,n) cin>>b[i];
        
        memo(prf,0);
        f1(i,n)
        {
        	prf[i]=prf[i-1]+a[i]*b[i];
        }
        
        memo(dp,-1);
        ans=prf[n];
        f1(i,n)
        {
        	fab(j,i+1,n)
        	{
        		x=recursion(i,j)-prf[j]+prf[i-1]+prf[n];
        		// cout<<x<<ln;
        		ans=max(ans,x);
        	}
        }
        
        // cout<<dp[1][2]<<ln;
        cout<<ans<<ln;
    }
	return 0;
}
// Either be on top or leave this crap..(╥﹏╥)