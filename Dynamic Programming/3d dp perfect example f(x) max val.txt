// Problem: B. Marvolo Gaunt's Ring
// Contest: Codeforces - Manthan, Codefest 17
// URL: https://codeforces.com/problemset/problem/855/B
// Memory Limit: 256 MB
// Time Limit: 2000 ms
// Author:      Tarun Kumar
// Institution: IET Lucknow

#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#define ll long long int
#define ld long double
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vpll vector<pair<ll,ll>>
#define prqueue priority_queue<ll,vector<ll>,greater<ll>>// top=small
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define ff first
#define ss second
#define all(v) v.begin(), v.end()
#define f0(i,n) for(i=0;i<n;i++)
#define f1(i,n) for(i=1;i<=n;i++)
#define fab(i,a,b) for(i=a;i<=b;i++)
#define f0r(i,n) for(i=n-1;i>=0;i--)
#define f1r(i,n) for(i=n;i>=1;i--)
#define fabr(i,a,b) for(i=b;i>=a;i--)
#define memo(a,b) memset(a,b,sizeof(a))
#define display(x) {for(auto dsp:x)cout<<dsp<<" ";cout<<"\n";}
#define hi cout<<"hi\n"
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ln "\n"
using namespace std;
const ld pi=acos(-1);const ll mod=1e9+7;bool debug=false;

int main()
{FAST;ll t=1,n,i,j,k,len,x,y,z,c,f,flag,p,q,mx,mn,l,r,sum,ans,tmp,it,pos,avg,m,cnt;
    string s;char ch;vll v;vpll vec;unordered_map<ll,ll> mappu;pair<ll,ll> pr;
    // cin>>t;while(t--)
    {
        f=0;sum=0;flag=0;ans=0;cnt=0;v.clear();mappu.clear();vec.clear();
        cin>>n;
        ll a[n];
        
        cin>>p>>q>>r;
        
        ans=LLONG_MIN;
        
        f0(i,n)
        {
        	cin>>a[i];
        }
        
        
        ll dp[n][3];
        // dp[i][0] stores maximum of value p·ax for x between 1 and i
        // dp[i][1] stores the maximum value of p·ax + q·ay such that x ≤ y ≤ i
        // dp[i][2] stores maximum value of p·ax + q·ay + r·az for x ≤ y ≤ z ≤ i
        
        
        f0(i,n)
        {
        	if(i==0)
        	{
        		dp[i][0]=p*a[0];
        		dp[i][1]=dp[0][0]+q*a[0];
        		dp[i][2]=dp[0][1]+r*a[0];
        		
        		continue;
        	}
        	
        	dp[i][0]=max(dp[i-1][0], p*a[i]);
        	dp[i][1]=max(dp[i-1][1], dp[i][0]+q*a[i]);
        	dp[i][2]=max(dp[i-1][2], dp[i][1]+r*a[i]);
        	
        }
        
        ans=dp[n-1][2];
        
        cout<<ans<<ln;
    }
	return 0;
}
// It's gonna be legendary!!
// Wait for it ~Barney
